generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  age       Int
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  doctor Doctor?

  patient Patient?

  doctorAppointments  Appointment[] @relation("DoctorAppointments")
  patientAppointments Appointment[] @relation("PatientAppointments")
}

model Doctor {
  id         Int               @id @default(autoincrement())
  userId     Int               @unique
  user       User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  speciality DoctorSpeciality
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model Patient {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  allergies   String[]
  medications String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Appointment {
  id                  Int               @id @default(autoincrement())
  doctorId            Int
  patientId           Int
  appointmentDateTime DateTime
  status              AppointmentStatus @default(Pending)
  appointmentReasons  String[]
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt

  doctor  User @relation("DoctorAppointments", fields: [doctorId], references: [id])
  patient User @relation("PatientAppointments", fields: [patientId], references: [id])
}

enum AppointmentStatus {
  Pending
  Confirmed
  Completed
  Cancelled
  NoShow
}

enum DoctorSpeciality {
  GeneralPractitioner
  Cardiologist
  Neurologist
  Dermatologist
  Pediatrician
  OrthopedicSurgeon
  Psychiatrist
}

enum UserRole {
  DOCTOR
  PATIENT
}